---

- name: WSE files and directories permissions hardening # noqa 301
  shell:
    cmd: 'set -eo pipefail && find /usr/local/WowzaStreamingEngine/ \( -type d -o -type f \) -print0 | xargs -0 chmod o-w'
    executable: '/bin/sh'

- name: Set read-only permissions for uninstall files
  file:
    path: "{{ item }}"
    state: file
    mode: '0400'
    owner: root
    group: root
  loop: "{{ wowza_uninstall_files }}"

- name: Fix sensitive config files permissions
  file:
    name: "{{ item }}"
    state: file
    mode: "0640"
    owner: root
    group: root
  loop: "{{ wowza_config_secret_files }}"

- name: Fix WSE config directory permissions
  file:
    name: "{{ wowza_config_directory }}"
    state: directory
    mode: "0750"
    owner: root
    group: root

- name: Create wowza logs directory
  file:
    name: "{{ wowza_log_directory }}"
    state: directory
    mode: "0700"
    owner: root
    group: root

- name: Change default WSE logs path and add XFF field to logs
  lineinfile:
    dest: "{{ wowza_config_log4j }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
    state: present
    backup: no
  loop:
    - regexp: '^log4j\.appender\.serverAccess\.File='
      line: 'log4j.appender.serverAccess.File={{ wowza_log_directory }}/wowzastreamingengine_access.log'
    - regexp: '^log4j\.appender\.serverError\.File='
      line: 'log4j.appender.serverError.File={{ wowza_log_directory }}/wowzastreamingengine_error.log'
    - regexp: '^log4j\.appender\.serverStats\.File='
      line: 'log4j.appender.serverStats.File={{ wowza_log_directory }}/wowzastreamingengine_stats.log'
    - regexp: '^(log4j\.appender\.serverAccess\.layout\.Fields=.+(?:(?<!,x-forwarded-ip)){1})$'
      line: "\\1,x-forwarded-ip"
    - regexp: '^(log4j\.appender\.serverError\.layout\.Fields=.+(?:(?<!,x-forwarded-ip)){1})$'
      line: "\\1,x-forwarded-ip"
    - regexp: '^(log4j\.appender\.serverStats\.layout\.Fields=.+(?:(?<!,x-forwarded-ip)){1})$'
      line: "\\1,x-forwarded-ip"
  notify: wowza restart wse

- name: Change default WSE Manager logs path
  lineinfile:
    dest: "{{ item.dest }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: no
  loop:
    - dest: '{{ wowza_manager_config_tomcat_log4j }}'
      regexp: '^1catalina\.org\.apache\.juli\.FileHandler\.directory'
      line: '1catalina.org.apache.juli.FileHandler.directory = {{ wowza_log_directory }}'
    - dest: '{{ wowza_manager_config_log4j }}'
      regexp: '^log4j\.appender\.serverAccess\.File='
      line: 'log4j.appender.serverAccess.File={{ wowza_log_directory }}/wmsmanager_access.log'
    - dest: '{{ wowza_manager_config_log4j }}'
      regexp: '^log4j\.appender\.serverError\.File='
      line: 'log4j.appender.serverError.File={{ wowza_log_directory }}/wmsmanager_error.log'
  notify: wowza restart wse manager

- name: Fix windows CR EOL in WSE configs
  replace:
    dest: "{{ item }}"
    regexp: "\r"
    backup: no
  loop: "{{ wowza_config_files }}"

- name: Configure WSE java heap size (tuning)
  lineinfile:
    path: "{{ wowza_config_tune }}"
    regexp: '^.*<HeapSize>.*</HeapSize>'
    line: "\t\t<HeapSize>{{ wowza_java_heapsize }}</HeapSize>"
    insertbefore: "^.*</Tune>"
    state: present
    backup: no
  vars:
    wowza_java_heapsize: "{% if wowza_tuning_heapsize is in ['Production', 'Development'] -%}
                          ${com.wowza.wms.TuningHeapSize{{ wowza_tuning_heapsize }}}
                          {%- elif wowza_tuning_heapsize | regex_search('^\\d+M$') %}{{ wowza_tuning_heapsize }}{% endif %}"
  notify: wowza restart wse
  when:
    - wowza_tuning_heapsize is defined
    - wowza_java_heapsize is defined and wowza_java_heapsize | length > 0

- name: Create Server.xml config
  template:
    src: Server.xml.j2
    dest: "{{ wowza_config_server }}"
    mode: '0644'
    owner: root
    group: root
  notify: wowza restart wse
  when:
    - wowza_rest_enable is defined and wowza_rest_enable != none
    - wowza_rest_docs_enable is defined
    - wowza_jmx_enable is defined

- name: Create VHost.xml config
  template:
    src: VHost.xml.j2
    dest: "{{ wowza_config_vhost }}"
    mode: '0644'
    owner: root
    group: root
  notify: wowza restart wse

- name: Add Wowza Modules
  unarchive:
    src: "{{ wowza_modules_collection_url + '/' + lookup('vars', wowza_module) }}"
    dest: "{{ wowza_directory }}"
    exclude:
      - lib/
      - LICENSE.txt
      - version.txt
    remote_src: yes
    mode: '0644'
    owner: root
    group: root
  loop:
    - wowza_modules_streampublisher
    - wowza_modules_dvrrecordercontrol
    - wowza_modules_packetizercontrol
    - wowza_modules_transcodercontrol
  loop_control:
    loop_var: wowza_module
  notify: wowza restart wse
  when:
    - lookup('vars', wowza_module + '_enable') is defined
    - lookup('vars', wowza_module + '_enable') | bool

- name: Check OS init system
  setup:
    filter: "ansible_service_mgr"
  when: ansible_facts['service_mgr'] is not defined

- name: Create directory for systemd drop-in files
  file:
    name: "{{ wowza_systemd_include_dir }}"
    owner: root
    group: root
    mode: "0755"
    state: directory
  when: ansible_facts['service_mgr'] == 'systemd'

- name: Add WSE systemd drop-in file
  copy:
    dest: "{{ wowza_systemd_include_dir }}/99.override.conf"
    owner: root
    group: root
    mode: "0644"
    content: |
      # Ansible managed file
      [Service]
      LimitNOFILE=65536
  notify:
    - 'wowza reload systemd'
    - 'wowza restart wse'
  when: ansible_facts['service_mgr'] == 'systemd'

- name: Fix WSE systemd service files permissions
  file:
    name: "{{ item }}"
    state: file
    mode: "0644"
    owner: root
    group: root
  loop: "{{ wowza_systemd_service_files }}"
  when: ansible_facts['service_mgr'] == 'systemd'
